% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fillLineGaps.R
\name{fillLineGaps}
\alias{fillLineGaps}
\title{Reconnecting discontinuous lines}
\usage{
fillLineGaps(
  droplet.img,
  bead.img = NULL,
  threshold = "13\%",
  alpha = 0.75,
  sigma = 0.1,
  radius = 5,
  visualize = TRUE
)
}
\arguments{
\item{droplet.img}{Image that contains discontinuous lines like edges or
contours.}

\item{bead.img}{Image that contains objects that should be removed before
before applying the fill algorithm.}

\item{threshold}{"in \%" (from \code{\link[imager]{threshold}})}

\item{alpha}{Threshold adjustment factor for edge detection
(from \code{\link[imager]{cannyEdges}}).}

\item{sigma}{smoothing (from \code{\link[imager]{cannyEdges}}).}

\item{visualize}{If TRUE (default) a plot is displayed highlighting the
added pixels in the original image.}
}
\value{
image with continuous edges (closed gaps)
}
\description{
The function tries to fill in edge discontinuity so that normal labeling and
edge detection becomes possible.
}
\details{
The function pre-processes the image to enable the application of
adaptiveInterpolation. Pre-processing involves thresholding, optional
object removal, LineEnd and diagonal LineEnd detection, and labeling. The
threshold should be set to allow for some remaining "bridge" pixels between
gaps to facilitate reconnection. For more details about reconnection,
please consult \code{\link[biopixeR]{adaptiveInterpolation}}.
Post-processing involves thinning the lines.
}
\examples{
closed_gaps <- fillLineGaps(droplets)
closed_gaps |> plot()
}
